apiVersion: v1
data:
  scheduler.conf: |
    [general]
    include = /conf/scheduler/site.conf

    [thread]
    num_executor=1

    [redis]
    hostname=localhost
    port=6379
    password=
    db=0

    [eagleeye:api]
    node=http://localhost:8080/api/nodes
    latency = http://localhost:8080/api/latency

    [pubsub:channel]
    scheduler=scheduler

    [stream:config]
    # true (1) or false (0)
    # FYI: Sometimes, thread-based image extractor might failed,
    #      in this case, set this `thread` value as false (0); default = true (1)
    thread=1
    convert_img=0
    gpu_converter=0
    test_mode=0
    width=1920
    height=1080
    auto_restart=1
    restart_delay=2

    # These config below are used only for `stream` type = `TCP`
    expected_width=640
    expected_height=480

    # thread=0

    [objdet:yolo]
    # default configuration
    source_folder_prefix=out
    file_ext=.png
    half=0
    img_size=608

    device=0
    conf_thres=0.1
    iou_thres=0.1
    classes=+
    agnostic_nms=1
    names=./common_files/object_detection/yolo/data/coco.names
    cfg=./common_files/object_detection/yolo/cfg/yolov3.cfg
    weights=./common_files/object_detection/yolo/weights/yolov3.weights
    # Stream reader; #TODO: To be verified whether this is still being used or not
    auto_restart=1
    # visualizer
    enable_cv_out=1
    window_size_height=1920
    window_size_width=1080

    # output
    fourcc=mp4v
    dump_raw_img=0
    dump_bbox_img=0
    dump_crop_img=0
    dump_bbox_txt=0
    txt_format=cartucho

    [zmq]
    sender_host=127.0.0.1
    recv_host_prefix=dual-det
    visualizer_port=5550
    img_source_port=5549

    [orchestration]
    # available values: {`native` and `docker`}
    mode=native
  site.conf: |
    # DISABLE THIS FOR `--network=HOST` mode.
    [redis]
    hostname=redis-service
    password =

    # DISABLE THIS FOR `--network=HOST` mode.
    [asab:storage]
    type = mongodb
    mongodb_database = eagleeyeDB
    mongodb_uri = mongodb://mongo-service:27017
    mongodb_host = mongo-service

    # DISABLE THIS FOR `--network=HOST` mode.
    [eagleeye:api]
    node=http://ews-service:8080/api/nodes
    latency = http://ews-service:8080/api/latency

    # DISABLE THIS FOR `--network=HOST` mode.
    [zmq]
    sender_uri=*
    sender_host=*
    recv_host_prefix=detection-service
    img_source_port=5549

    [orchestration]
    # available values: {`native` and `docker`}
    # mode=`docker` can be used for both docker environment and kubernetes environment
    mode=docker

    [stream:config]
    thread=0

    # Set this value as 1 (True) and use only one worker node,
    # to: 1) disable waiting time of sending frame into worker node and 2) never send any frame to the worker node
    test_mode=0
kind: ConfigMap
metadata:
  name: scheduler-configmap
  namespace: eagleeye
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: scheduler-deploy
  name: scheduler-deploy
  namespace: eagleeye
spec:
  replicas: 1
  selector:
    matchLabels:
      name: scheduler-deploy
  template:
    metadata:
      labels:
        name: scheduler-deploy
      name: scheduler-deploy
    spec:
      containers:
      - image: timwilliam/eagleeye.scheduler:2.3.1
        imagePullPolicy: IfNotPresent
        name: scheduler-deploy
        volumeMounts:
        - mountPath: /conf/scheduler
          name: scheduler-config
          readOnly: false
        - mountPath: /app/data
          name: data-files
      imagePullSecrets:
      - name: timwilliam-regcred
      volumes:
      - configMap:
          items:
          - key: scheduler.conf
            path: scheduler.conf
          - key: site.conf
            path: site.conf
          name: scheduler-configmap
        name: scheduler-config
      - name: data-files
        persistentVolumeClaim:
          claimName: scheduler-volume-claim
