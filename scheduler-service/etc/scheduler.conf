[general]
include = /conf/scheduler/site.conf

[thread]
num_executor=1

[redis]
hostname=localhost
port=6379
password=
db=0

[eagleeye:api]
node=http://localhost:8080/api/nodes
latency = http://localhost:8080/api/latency

[pubsub:channel]
scheduler=scheduler

[stream:config]
# true (1) or false (0)
# FYI: Sometimes, thread-based image extractor might failed,
#      in this case, set this `thread` value as false (0); default = true (1)
thread=1
convert_img=0
gpu_converter=0
test_mode=0
width=1920
height=1080
channel=3
auto_restart=1
restart_delay=2

# These config below are used only for `stream` type = `TCP`
expected_width=640
expected_height=480

# set value > 0, to ENABLE this function; (Zero means that the system will NOT skip any frame)
num_skipped_frames=0

[objdet:yolo]
# default configuration
source_folder_prefix=out
file_ext=.png
half=0
img_size=608

device=0
conf_thres=0.1
iou_thres=0.1
classes=+
agnostic_nms=1
names=./common_files/object_detection/yolo/data/coco.names
cfg=./common_files/object_detection/yolo/cfg/yolov3.cfg
weights=./common_files/object_detection/yolo/weights/yolov3.weights
# Stream reader; #TODO: To be verified whether this is still being used or not
auto_restart=1
# visualizer
enable_cv_out=1
window_size_height=1920
window_size_width=1080

# output
fourcc=mp4v
dump_raw_img=0
dump_bbox_img=0
dump_crop_img=0
dump_bbox_txt=0
txt_format=cartucho

[zmq]
sender_host=127.0.0.1
recv_host_prefix=dual-det
visualizer_port=5550
img_source_port=5549

[orchestration]
# available values: {`native` and `docker`}
mode=native

[zenoh]
# fixed value! do not change this value!
comsumer_type=4