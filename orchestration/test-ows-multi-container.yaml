# Name: Test Deployment for OWS Web Service Application
# Date: 09/08/2020
# Details: Single pod deployment with multiple container

# OWS Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ows-deploy
  labels:
    name: ows-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ows-deploy
  template:
    metadata:
      name: ows-deploy
      labels:
        name: ows-deploy
    spec:
      volumes:
        # For OWS
        - name: test-config
          # Create "test-config" configMap with:
          # $ kubectl create configmap test-config --from-file .../rpa-disaster-awareness/openweather_service/etc/ows.conf --from-file .../rpa-disaster-awareness/openweather_service/log/ows.log
          configMap:
            name: test-config
        - name: vol-conf
          emptyDir: {}
        - name: vol-log
          emptyDir: {}
        # For MongoDB
        - name: mongo
          hostPath:
            # path will be a local path in the host machine
            path: /Users/tim/Desktop/devel/temp-data
      containers:
        - name: ows
          image: timwilliam/test-ows:1.1
          ports:
            - containerPort: 8082
          volumeMounts:
            # Mount Empty Dir
            - name: vol-conf
              mountPath: /conf/
            # ConfigMap
            - name: test-config
              mountPath: /conf/ows.conf
              subPath: ows.conf
        - name: mongo
          image: mongo:4.4.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo

---
# OWS Service
apiVersion: v1
kind: Service
metadata:
  name: service-ows
spec:
  type: NodePort
  selector:
    name: ows-deploy
  ports:
  - port: 8082
    targetPort: 8082
    nodePort: 30001

---
# CURL Pod for testing
apiVersion: v1
kind: Pod
metadata:
    name: curl
    labels:
        name: curl
spec:
    containers:
        - name: curl
          image: khannedy/nginx-curl